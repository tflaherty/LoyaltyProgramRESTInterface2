-- How to generate your own HATEOAS
http://keaplogik.blogspot.com/2015/01/spring-hateoas-embedded-resources-with.html
http://docs.spring.io/spring-hateoas/docs/current/reference/html/

-- @JSONView looks very interesting
https://spring.io/blog/2014/12/02/latest-jackson-integration-improvements-in-spring

-- Good article on a more modern way of versioning REST APIs
https://www.narwhl.com/2015/03/the-ultimate-solution-to-versioning-rest-apis-content-negotiation/

-- Spring REST sorting, filtering, paging examples
http://localhost:8080/people/?limit=50
http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages?size=7
http://localhost:8080/people?page=2&limit=20
http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages?sort=id,desc

-- Modeling Specializations and Generalizations
http://stackoverflow.com/questions/4361381/how-do-we-implement-an-is-a-relationship

-- Spring validation examples
http://www.journaldev.com/2668/spring-validation-example-mvc-validator

-- REST principles and pragmatic design principles
http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api#restful

-- projections
Be careful because when you add a field or property to an entity the projection won't pick it up automatically!
I should probably use @Transient fields (like in Loyalty for DivisionName and CompanyName instead of projections

-- PostgreSQL sequence based entity id problem
see http://stackoverflow.com/questions/4288740/hibernate-use-of-postgresql-sequence-does-not-affect-sequence-table

-- PostgreSQL naming conventions
 http://stackoverflow.com/questions/4107915/postgresql-default-constraint-names

The standard names for indexes in PostgreSQL are:

{tablename}_{columnname(s)}_{suffix}

where the suffix is one of the following:

    pkey for a Primary Key constraint
    key for a Unique constraint
    excl for an Exclusion constraint
    idx for any other kind of index
    fkey for a Foreign key
    check for a Check constraint

Standard suffix for sequences is

    seq for all sequences

Proof of your UNIQUE-constraint:

    NOTICE: CREATE TABLE / UNIQUE will create implicit index "example_a_b_key" for table "example"


-- debugging RDS to environment problem
http://stackoverflow.com/questions/34344579/change-which-rds-database-an-aws-eb-environment-uses
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/troubleshooting.html
https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.RDS.html?console_help=true

-- getting started with java on elastic beanstalk
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/java-getstarted.html

-- Spring Data REST Reference Documentation
http://docs.spring.io/spring-data/rest/docs/current/reference/html/
https://spring.io/understanding/REST

-- how to use a "foreign key" in a rest POST
http://stackoverflow.com/questions/37902946/add-item-to-the-collection-with-foreign-key-via-rest-call

example:
POST using this body:
{
"pointTransactionType":"http://localhost:8080/pointTransactionType/1",
"loyalty":"http://localhost:8080/loyalty/1",
"points":"13",
"dateCreated":"2016-06-23"
}

-------------------------------------------------------------------------------------------------------
-- Common application properties
http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

-------------------------------------------------------------------------------------------------------
-- Mapping a Postgres JSON column using JPA
https://devlearnings.wordpress.com/2014/03/28/using-postgres-json/
http://www.thoughts-on-java.org/persist-postgresqls-jsonb-data-type-hibernate/

-------------------------------------------------------------------------------------------------------
-- JPA Repository Reference
http://docs.spring.io/spring-data/jpa/docs/1.4.3.RELEASE/reference/html/jpa.repositories.html

-------------------------------------------------------------------------------------------------------
-- JSON column in a relational database vs. table of name/value pairs
http://stackoverflow.com/questions/15367696/storing-json-in-database-vs-having-a-new-column-for-each-key

-------------------------------------------------------------------------------------------------------
-- how to make a search method call
http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCode?code=314

-------------------------------------------------------------------------------------------------------
-- modularizing angularjs
https://www.safaribooksonline.com/blog/2014/03/27/13-step-guide-angularjs-modularization/

-------------------------------------------------------------------------------------------------------
-- Java 8 Date API
http://www.journaldev.com/2800/java-8-date-localdate-localdatetime-instant

-------------------------------------------------------------------------------------------------------
-- problem with JPA @Column annotation not working
http://stackoverflow.com/questions/25283198/spring-boot-jpa-column-name-annotation-ignored

-------------------------------------------------------------------------------------------------------
-- Java Persistence Query Language
http://docs.oracle.com/javaee/6/tutorial/doc/bnbtl.html

-------------------------------------------------------------------------------------------------------
-- Jackson JSON library good examples
http://proliferay.com/create-json-by-jackson-api/

-------------------------------------------------------------------------------------------------------
-- JSON-RPC
http://www.jsonrpc.org/specification

https://www.insaneprogramming.be/blog/2015/10/08/rpc-in-the-rest-age/

---- java implementation
https://github.com/briandilley/jsonrpc4j

https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/

http://thenextweb.com/dd/2013/12/17/future-api-design-orchestration-layer/
http://www.programmableweb.com/news/rest-losing-its-flair-rest-api-alternatives/analysis/2013/12/19

http://joost.vunderink.net/blog/2016/01/03/why-we-chose-json-rpc-over-rest/
https://www.infoq.com/news/2012/02/websockets-rest
http://mmikowski.github.io/json-pure/

-------------------------------------------------------------------------------------------------------
- composite primary keys
https://en.wikibooks.org/wiki/Java_Persistence/Identity_and_Sequencing
http://www.thejavageek.com/2014/05/01/jpa-embeddedid-example/
http://www.ibm.com/developerworks/library/os-hibernatejpa/
-- debugging composite primary keys
private Link getSingleResourceLinkTo(Object instance)
   in C:\Users\Tom\.gradle\caches\moduless-2\files-2.1\org.springframework.data\spring-data-rest-webmvc\2.4.4.RELEASE\8f75d75b7d3e27d7d6966f64d29a1f63d3ecb30b\spring-data-rest-webmvc-2.4.4.RELEASE-sources.jar!\org\springframework\data\rest\webmvc\PersistentEntityResourceAssembler.java
-- this is where it gets the id to use in the construction of the self link
-- for CurveEntry it is returning 'position' as the idProperty of PersistentEntity<?, ?>
public IdPropertyIdentifierAccessor(PersistentEntity<?, ?> entity, Object target)
http://docs.oracle.com/javaee/6/api/javax/persistence/MapsId.html
Could be very useful: http://docs.jboss.org/hibernate/annotations/3.5/reference/en/html_single/#entity-mapping-identifier
Good MapsId example: http://www.thejavageek.com/2014/09/26/jpa-mapsid-example/

-------------------------------------------------------------------------------------------------------
-- scheduling on AWS
https://medium.com/@joelennon/running-cron-jobs-on-amazon-web-services-aws-elastic-beanstalk-a41d91d1c571#.8xy0lvwk4
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#using-features-managing-env-tiers-worker-settings
https://aws.amazon.com/blogs/aws/background-task-handling-for-aws-elastic-beanstalk/

-------------------------------------------------------------------------------------------------------
-- securing a web application
http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html
(not sure this is applicable but it was quoted somewhere
http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html
(very good) http://stackoverflow.com/questions/319530/restful-authentication
-- show how to use basic authentication using Javascript
http://code.tutsplus.com/tutorials/wp-rest-api-setting-up-and-using-basic-authentication--cms-24762
http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-security.html
(Non-REST) https://spring.io/guides/gs/securing-web/
https://raibledesigns.com/rd/entry/java_web_application_security_part3
-- REST security cheat sheet
https://www.owasp.org/index.php/REST_Security_Cheat_Sheet#Whitelist_allowable_methods

-------------------------------------------------------------------------------------------------------
-- Spring endpoint documentation (e.g. beans, health, mappings)
http://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html

-------------------------------------------------------------------------------------------------------
-- Controller vs RestController
https://www.genuitec.com/spring-frameworkrestcontroller-vs-controller/

-------------------------------------------------------------------------------------------------------
-- CORS problem
http://stackoverflow.com/questions/31724994/spring-data-rest-and-cors
- AWS and CORS
http://docs.aws.amazon.com/AmazonS3/latest/dev/cors.htmls
http://docs.aws.amazon.com/AmazonS3/latest/UG/EditingBucketPermissions.html
- tutorial
http://www.html5rocks.com/en/tutorials/cors/
https://spring.io/understanding/CORS
- Good description of HTTP headers
https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS

-- Spring 4.2 support for CORS
http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cors.html

-- Spring Data REST and Projections
- This one is fantastic!
http://docs.spring.io/spring-data/rest/docs/current/reference/html/#projections-excerpts
https://blog.shinetech.com/2015/04/15/spring-data-rest-and-projections/
-- using entity to/from DTO
http://www.baeldung.com/entity-to-and-from-dto-for-a-java-spring-application


-- Using RDS with Elastic Beanstalk
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.RDS.html
- specific info for Java
http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/java-rds.html

-- Using system environment variables in application.properties
http://stackoverflow.com/questions/35531661/using-env-variable-in-spring-boots-application-properties

-- Adding RDS to my AWS Environment
https://docs.aws.amazon.com/quickstarts/latest/webapp/expanding-environments.html?icmpid=docs_eb_console_new#expanding-environments-rds

-- AWS RDS Security Groups
http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.RDSSecurityGroups.html


---------------------------------------------------------------------------------------------
------------------------------------ Usage Examples -----------------------------------------
---------------------------------------------------------------------------------------------

------ How to create a new division
  POST to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/divisions
  Content-Type:  application/json
  Request Body:
  {
      "name":"Test Division",
      "company": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/companies/1"
  }
  Returns: 201 CREATED

------ How to create a new loyalty
  POST to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties
  Content-Type:  application/json
  Request Body:
  {
      "loyaltyCode":"TST0001",
      "dateCreated":"2016-08-26T00:00:00.000+0000",
      "division": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/divisions/1"
  }
  Returns: 201 CREATED

------ How to create a new message
  POST to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages
  Content-Type:  application/json
  Request Body:
  {
        "message": "testing sequence id fix 2",
        "dateReceived": "2016-08-26T00:23:00.000+0000",
        "read": false,
        "metadata": "{ \"metadata\":\"foobar\"}",
        "loyalty":"http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1"
  }

  Returns: 201 CREATED
  Return Body:
  {
      "id": 400,
      "message": "testing sequence id fix 2",
      "dateReceived": "2016-08-26T00:23:00.000+0000",
      "read": false,
      "metadata": "{ \"metadata\":\"foobar\"}",
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/400"
          },
          "message": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/400{?projection}",
              "templated": true
          },
          "loyalty": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/400/loyalty"
          }
      }
  }

------ How to mark a message as read
  PATCH to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/5
  Content_type:  application/json
  Request Body:
  {
      "read":false
  }
  Returns: 200 OK
  Return Body:
  {
      "id": 5,
      "message": "Test message 1",
      "dateReceived": "2016-08-26T00:00:00.000+0000",
      "read": false,
      "metadata": null,
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/5"
          },
          "message": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/5{?projection}",
              "templated": true
          },
          "loyalty": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/5/loyalty"
          }
      }
  }

------ How to delete a message
  DELETE to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/messages/6
  Returns: 204 NO CONTENT on success, 404 NOT FOUND if failed because there's no message with that id

------ How to create a new point transaction
  POST to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactions
  Content-Type:  application/json
  Request Body:
  {
        "dateCreated": "2016-08-26T00:00:00.000+0000",
        "points": 13,
        "expirationDate": "2016-08-26T23:00:00.000+0000",
        "loyalty":"http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1",
        "pointTransactionType":"http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactionType/2"
  }
  Returns: 201 CREATED
  Return Body:
  {
      "id": 6,
      "dateCreated": "2016-08-26T00:00:00.000+0000",
      "points": 13,
      "expirationDate": "2016-08-26T23:00:00.000+0000",
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactions/6"
          },
          "pointTransaction": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactions/6{?projection}",
              "templated": true
          },
          "loyalty": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactions/6/loyalty"
          },
          "pointTransactionType": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/pointTransactions/6/pointTransactionType"
          }
      }
  }

------ How to link a person and a loyalty
  POST to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyaltyPersonMaps
  Content-Type:  application/json
  Request Body:
  {
      "person":"http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/persons/4",
      "loyalty":"http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1"
  }
  Returns: 201 CREATED
  Return Body:
  {
      "id": 5,
      "loyaltyId": 1,
      "personId": 4,
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyaltyPersonMaps/5"
          },
          "loyaltyPersonMap": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyaltyPersonMaps/5"
          },
          "person": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyaltyPersonMaps/5/person"
          },
          "loyalty": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyaltyPersonMaps/5/loyalty"
          }
      }
  }

------ How to delete division with id 4
  DELETE to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/divisions/4
  Returns: 204 NO CONTENT

------ How to update division with id 4 (changes name to "Test DivisionMod"
  (Technically this shouldn't work without the other required parameter "company"!)
  PUT to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/divisions/4
  Content-Type:  application/json
  Request Body:
  {
      "name":"Test DivisionMod"
  }
  Returns:  200 OK

------ How to update division with id 4 (changes company to company with id 4)
  PATCH to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/divisions/4
  Content-Type:  application/json
  Request Body:
  {
      "company": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/companies/4"
  }
  Returns: 200 OK when succeeds, 500 INTERNAL SERVER ERROR when fails (because it threw a validation exception on Division because "name" was missing)
  (We threw a validation exception on Division because "name" was missing BUT we can update just the "name"
  with PUT (see above) and it doesn't complain about "company" missing!)

  If we use PUT instead it will fail because PUT replaces an existing entity. If only a subset of data elements are provided, the rest will be replaced with empty or null.
  PATCH updates only the specified fields of an entity at a URI. A PATCH request is idempotent.

------ How to get a loyalty object by id
  GET to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/700
  Returns: 200 OK if the loyalty exists if not it returns a 404 NOT FOUND
  Response Body:
  {
      "id": 1,
      "loyaltyCode": "LOY0001",
      "dateCreated": "2016-08-26T00:00:00.000+0000",
      "companyName": "DAI",
      "divisionName": "Chadwicks",
      "siteCode": "chadwicks",
      "availablePoints": 26,
      "heldPoints": 0,
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1"
          },
          "loyalty": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1{?projection}",
              "templated": true
          },
          "persons": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/persons"
          },
          "pointTransactions": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/pointTransactions"
          },
          "messages": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/messages"
          },
          "division": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/division"
          }
      }
  }

------ How to get a loyalty object by loyalty code, division name and company name
  GET to http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeDivisionNameCompanyName?loyaltyCode=LOY0001&divisionName=Chadwicks&companyName=DAI
  Returns: 200 OK
  Response Body:
  {
      "_embedded": {
          "loyalties": [{
              "id": 1,
              "loyaltyCode": "LOY0001",
              "dateCreated": "2016-08-26T00:00:00.000+0000",
              "companyName": "DAI",
              "divisionName": "Chadwicks",
              "availablePoints": 0,
              "heldPoints": 0,
              "_links": {
                  "self": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1"
                  },
                  "loyalty": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1{?projection}",
                      "templated": true
                  },
                  "division": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/division"
                  },
                  "persons": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/persons"
                  },
                  "pointTransactions": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/pointTransactions"
                  },
                  "messages": {
                      "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/messages"
                  }
              }
          }]
      },
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeDivisionNameCompanyName?loyaltyCode=LOY0001&divisionName=Chadwicks&companyName=DAI"
          }
      }
  }

------ How to get a loyalty object by loyalty code and site code
  GET http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeSiteCode?loyaltyCode=LOY0001&siteCode=chadwicks
  Returns: 200 OK
  Response Body:
  {
      "_embedded": {
          "loyalties": [
              {
                  "id": 1,
                  "loyaltyCode": "LOY0001",
                  "dateCreated": "2016-08-26T00:00:00.000+0000",
                  "companyName": "DAI",
                  "divisionName": "Chadwicks",
                  "siteCode": "chadwicks",
                  "availablePoints": 26,
                  "heldPoints": 0,
                  "_links": {
                      "self": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1"
                      },
                      "loyalty": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1{?projection}",
                          "templated": true
                      },
                      "persons": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/persons"
                      },
                      "pointTransactions": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/pointTransactions"
                      },
                      "messages": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/messages"
                      },
                      "division": {
                          "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/1/division"
                      }
                  }
              }
          ]
      },
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeSiteCode?loyaltyCode=LOY0001&siteCode=chadwicks"
          }
      }
  }

------ What happens when you request a loyalty object by an incorrect combination of loyalty code and site code
  GET http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeSiteCode?loyaltyCode=LOY0001&siteCode=chadwicks
  Returns: 200 OK (i.e. there was no client error)
  Response Body:
  {
      "_embedded": {
          "loyalties": []
      },
      "_links": {
          "self": {
              "href": "http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/loyalties/search/findByLoyaltyCodeSiteCode?loyaltyCode=LOY0001&siteCode=chadwicksx"
          }
      }
  }



 -------------------------------------------------------------------------------------------------------
 -- How to add gift points

 POST http://loyaltyprogramrestinterface2.8evdhp67pp.us-west-2.elasticbeanstalk.com/rpc/v00001/giftPoints
 Request Body:
 {
    "jsonrpc":"2.0",
    "method":"dai.loyalty.giftPoints",
    "params":
    {
    "loyaltyCode":"LOY0001",
    "loyaltyDivisionName":"Chadwicks",
    "loyaltyCompanyName":"DAI",
    "points":150,
    "dollarValue":37.59
    },
   "id":375
 }
 Returns: 200 OK
 Response Body:
 {
    "jsonrpc": "2.0",
    "result": {
        "point transaction id": 14,
        "loyalty id": 1
    },
    "id": "375"
 }